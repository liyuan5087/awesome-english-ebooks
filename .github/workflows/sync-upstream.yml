name: 同步上游仓库

on:
  schedule:
    # 每周六0点运行（UTC时间是每周五16:00，对应北京时间24:00，也就是周六00:00）
    - cron: '0 16 * * 5'
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      # 检出当前仓库代码（增加深度以获取更完整的历史记录）
      - name: 检出当前仓库
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      # 添加上游仓库并获取更完整的历史记录
      - name: 添加上游仓库
        run: |
          git remote add upstream https://github.com/hehonghui/awesome-english-ebooks.git
          git fetch upstream --depth=50
      
      # 备份GitHub Action文件
      - name: 备份GitHub Action文件
        run: |
          mkdir -p /tmp/github-actions-backup
          if [ -d ".github/workflows" ]; then
            cp -r .github/workflows /tmp/github-actions-backup/
          fi
      
      # 检测上游仓库的默认分支
      - name: 检测上游仓库的分支
        id: detect-branch
        run: |
          if git ls-remote --heads upstream main | grep main; then
            echo "UPSTREAM_BRANCH=main" >> $GITHUB_ENV
          else
            echo "UPSTREAM_BRANCH=master" >> $GITHUB_ENV
          fi
          if git rev-parse --verify --quiet main; then
            echo "LOCAL_BRANCH=main" >> $GITHUB_ENV
          else
            echo "LOCAL_BRANCH=master" >> $GITHUB_ENV
          fi
      
      # 合并上游仓库的更改
      - name: 合并上游仓库的更改
        run: |
          # 确保我们在正确的本地分支上
          git checkout ${{ env.LOCAL_BRANCH }}
          
          # 配置Git用户信息（在合并前设置）
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          
          # 使用--allow-unrelated-histories参数合并上游仓库的更改
          git merge upstream/${{ env.UPSTREAM_BRANCH }} --allow-unrelated-histories -m "同步上游仓库更改" || {
            echo "合并冲突，以上游版本为准"
            git reset --hard upstream/${{ env.UPSTREAM_BRANCH }}
          }
      
      # 恢复GitHub Action文件
      - name: 恢复GitHub Action文件
        run: |
          if [ -d "/tmp/github-actions-backup/workflows" ]; then
            mkdir -p .github/workflows
            cp -r /tmp/github-actions-backup/workflows/* .github/workflows/
            git add .github/workflows
            git commit -m "恢复GitHub Action文件" || echo "没有需要恢复的文件"
          fi
          
      # 推送更改到你的仓库
      - name: 推送更改到仓库
        run: |
          git push origin ${{ env.LOCAL_BRANCH }}
